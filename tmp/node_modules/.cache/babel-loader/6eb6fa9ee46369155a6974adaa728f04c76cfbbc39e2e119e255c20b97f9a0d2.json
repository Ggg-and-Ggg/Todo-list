{"ast":null,"code":"var _jsxFileName = \"E:\\\\csstudydir\\\\todo-list\\\\order\\\\tmp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, Button, Input, Modal, Carousel as AntCarousel, message } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [newTaskContent, setNewTaskContent] = useState('');\n  const [isSaveSuccessful, setIsSaveSuccessful] = useState(false);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      // Rotate tasks every two seconds\n      setCurrentIndex(prevIndex => (prevIndex + 1) % todos.length);\n    }, 2000);\n    return () => clearInterval(interval);\n  }, [todos]);\n  const addTodo = (content, status) => {\n    const newTodo = {\n      id: Date.now(),\n      content,\n      status\n    };\n    setTodos([...todos, newTodo]);\n  };\n  const removeTodo = todoId => {\n    setTodos(todos.filter(item => item.id !== todoId));\n  };\n  const changeStatus = (todoId, newStatus) => {\n    setTodos(todos.map(item => item.id === todoId ? {\n      ...item,\n      status: newStatus\n    } : item));\n  };\n  const handleSaveNewTask = () => {\n    if (newTaskContent.trim() !== '') {\n      addTodo(newTaskContent, 'TODO');\n      setNewTaskContent('');\n      setIsSaveSuccessful(true);\n      setTimeout(() => {\n        setIsSaveSuccessful(false);\n      }, 3000);\n    } else {\n      message.error('Task content cannot be empty.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoContainer\",\n    children: [/*#__PURE__*/_jsxDEV(AntCarousel, {\n      effect: \"fade\",\n      autoplay: true,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoColumnsContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todoColumn\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"columnHeader\",\n          children: \"All Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), todos.map(item => /*#__PURE__*/_jsxDEV(Card, {\n          className: \"todoCard\",\n          children: [item.content, item.status === 'DONE' && /*#__PURE__*/_jsxDEV(Button, {\n            className: \"todoButton\",\n            onClick: () => showDetails(item),\n            children: \"View Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), item.status === 'DOING' && /*#__PURE__*/_jsxDEV(Button, {\n            className: \"todoButton\",\n            onClick: () => finishTask(item.id),\n            children: \"Click to Finish\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"todoButton\",\n            onClick: () => removeTodo(item.id),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todoColumn\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"New Task\",\n          value: newTaskContent,\n          onChange: e => setNewTaskContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"todoButton\",\n          onClick: handleSaveNewTask,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), isSaveSuccessful && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"successMessage\",\n          children: \"Save Successful\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"Q0TSwe9PaYNaku7+RlZZdGzJkks=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","useEffect","Card","Button","Input","Modal","Carousel","AntCarousel","message","jsxDEV","_jsxDEV","TodoList","_s","todos","setTodos","currentIndex","setCurrentIndex","newTaskContent","setNewTaskContent","isSaveSuccessful","setIsSaveSuccessful","interval","setInterval","prevIndex","length","clearInterval","addTodo","content","status","newTodo","id","Date","now","removeTodo","todoId","filter","item","changeStatus","newStatus","map","handleSaveNewTask","trim","setTimeout","error","className","children","effect","autoplay","fileName","_jsxFileName","lineNumber","columnNumber","onClick","showDetails","finishTask","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["E:/csstudydir/todo-list/order/tmp/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, Button, Input, Modal, Carousel as AntCarousel, message } from 'antd';\n\nconst TodoList = () => {\n  const [todos, setTodos] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [newTaskContent, setNewTaskContent] = useState('');\n  const [isSaveSuccessful, setIsSaveSuccessful] = useState(false);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      // Rotate tasks every two seconds\n      setCurrentIndex((prevIndex) => (prevIndex + 1) % todos.length);\n    }, 2000);\n\n    return () => clearInterval(interval);\n  }, [todos]);\n\n  const addTodo = (content, status) => {\n    const newTodo = { id: Date.now(), content, status };\n    setTodos([...todos, newTodo]);\n  };\n\n  const removeTodo = (todoId) => {\n    setTodos(todos.filter((item) => item.id !== todoId));\n  };\n\n  const changeStatus = (todoId, newStatus) => {\n    setTodos(\n      todos.map((item) => (item.id === todoId ? { ...item, status: newStatus } : item))\n    );\n  };\n\n  const handleSaveNewTask = () => {\n    if (newTaskContent.trim() !== '') {\n      addTodo(newTaskContent, 'TODO');\n      setNewTaskContent('');\n      setIsSaveSuccessful(true);\n      setTimeout(() => {\n        setIsSaveSuccessful(false);\n      }, 3000);\n    } else {\n      message.error('Task content cannot be empty.');\n    }\n  };\n\n  return (\n    <div className=\"todoContainer\">\n      <AntCarousel effect=\"fade\" autoplay>\n        {/* Top chart */}\n        <div>\n          {/* Add your top chart component here */}\n          {/* Example: <TopChart /> */}\n        </div>\n        {/* Bottom chart */}\n        <div>\n          {/* Add your bottom chart component here */}\n          {/* Example: <BottomChart /> */}\n        </div>\n      </AntCarousel>\n\n      <div className=\"todoColumnsContainer\">\n        {/* All Tasks list */}\n        <div className=\"todoColumn\">\n          <div className=\"columnHeader\">All Tasks</div>\n          {todos.map((item) => (\n            <Card key={item.id} className=\"todoCard\">\n              {item.content}\n              {/* Display \"View Details\" for completed tasks */}\n              {item.status === 'DONE' && (\n                <Button className=\"todoButton\" onClick={() => showDetails(item)}>\n                  View Details\n                </Button>\n              )}\n              {/* Display \"Click to Finish\" for tasks in progress */}\n              {item.status === 'DOING' && (\n                <Button className=\"todoButton\" onClick={() => finishTask(item.id)}>\n                  Click to Finish\n                </Button>\n              )}\n              <Button className=\"todoButton\" onClick={() => removeTodo(item.id)}>\n                Remove\n              </Button>\n            </Card>\n          ))}\n        </div>\n\n        {/* New Task input */}\n        <div className=\"todoColumn\">\n          <Input\n            placeholder=\"New Task\"\n            value={newTaskContent}\n            onChange={(e) => setNewTaskContent(e.target.value)}\n          />\n          <Button className=\"todoButton\" onClick={handleSaveNewTask}>\n            Save\n          </Button>\n          {isSaveSuccessful && <div className=\"successMessage\">Save Successful</div>}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TodoList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}