{"ast":null,"code":"var _jsxFileName = \"E:\\\\csstudydir\\\\todo-list\\\\order\\\\tmp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// Import necessary components and styles from Ant Design\nimport { Layout, Card, Button, Input, Modal, message, Carousel } from 'antd';\nimport React, { useState } from 'react';\nimport TaskCard from './TaskCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Content\n} = Layout;\nconst TodoList = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [newTaskContent, setNewTaskContent] = useState('');\n  const [isSaveSuccessful, setIsSaveSuccessful] = useState(false);\n  const addTodo = (content, status) => {\n    const newTodo = {\n      id: Date.now(),\n      content,\n      status\n    };\n    setTodos([...todos, newTodo]);\n  };\n  const removeTodo = todoId => {\n    setTodos(todos.filter(item => item.id !== todoId));\n  };\n  const handleSaveNewTask = () => {\n    if (newTaskContent.trim() !== '') {\n      addTodo(newTaskContent, 'TODO');\n      setNewTaskContent('');\n      setIsSaveSuccessful(true);\n      setTimeout(() => {\n        setIsSaveSuccessful(false);\n      }, 3000);\n    } else {\n      message.error('Task content cannot be empty.');\n    }\n  };\n  const showDetails = item => {\n    Modal.info({\n      title: 'Task Details',\n      content: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Task Content: \", item.content]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", item.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    });\n  };\n  const startTask = task => {\n    // Logic to update task state to 'DOING'\n    const updatedTodos = todos.map(t => t.id === task.id ? {\n      ...t,\n      status: 'DOING'\n    } : t);\n    setTodos(updatedTodos);\n  };\n  const finishTask = todoId => {\n    // Change the status of the task to \"Completed\" and move it to the \"DONE\" list\n    const updatedTodos = todos.map(t => t.id === todoId ? {\n      ...t,\n      status: 'DONE'\n    } : t);\n    setTodos(updatedTodos);\n  };\n  const contentStyle = {\n    height: '160px',\n    color: '#078095',\n    lineHeight: '160px',\n    textAlign: 'center',\n    background: '#c7e2ff' // Light blue background color\n  };\n\n  const renderTasksByStatus = status => {\n    return todos.filter(task => status === 'ALL TASKS' || task.status === status).map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: contentStyle,\n      children: [/*#__PURE__*/_jsxDEV(TaskCard, {\n        className: \"task-card\",\n        task: task,\n        onshowDetails: showDetails,\n        onStart: startTask,\n        onFinish: finishTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), task.status === 'DONE' && /*#__PURE__*/_jsxDEV(Button, {\n        className: \"viewDetailsButton\",\n        onClick: () => showDetails(task),\n        children: \"View Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoContainer\",\n    children: [/*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(Content, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between'\n          },\n          children: /*#__PURE__*/_jsxDEV(Carousel, {\n            autoplay: true,\n            children: renderTasksByStatus('ALL TASKS')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoColumnsContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todoColumn\",\n        children: renderTasksByStatus('ALL TASKS')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todoColumn\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"TODO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), renderTasksByStatus('TODO')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todoColumn\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"DOING\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), renderTasksByStatus('DOING')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todoColumn\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"DONE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), renderTasksByStatus('DONE')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoColumn\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"New Task\",\n        value: newTaskContent,\n        onChange: e => setNewTaskContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"todoButton\",\n        onClick: handleSaveNewTask,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), isSaveSuccessful && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"successMessage\",\n        children: \"Save Successful\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"mGcU//nIww6+Mu2YgSebLg46z04=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["Layout","Card","Button","Input","Modal","message","Carousel","React","useState","TaskCard","jsxDEV","_jsxDEV","Content","TodoList","_s","todos","setTodos","newTaskContent","setNewTaskContent","isSaveSuccessful","setIsSaveSuccessful","addTodo","content","status","newTodo","id","Date","now","removeTodo","todoId","filter","item","handleSaveNewTask","trim","setTimeout","error","showDetails","info","title","children","fileName","_jsxFileName","lineNumber","columnNumber","startTask","task","updatedTodos","map","t","finishTask","contentStyle","height","color","lineHeight","textAlign","background","renderTasksByStatus","style","className","onshowDetails","onStart","onFinish","onClick","display","justifyContent","autoplay","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["E:/csstudydir/todo-list/order/tmp/src/App.js"],"sourcesContent":["// Import necessary components and styles from Ant Design\nimport { Layout, Card, Button, Input, Modal, message, Carousel } from 'antd';\nimport React, { useState } from 'react';\nimport TaskCard from './TaskCard';\n\nconst { Content } = Layout;\n\nconst TodoList = () => {\n  const [todos, setTodos] = useState([]);\n  const [newTaskContent, setNewTaskContent] = useState('');\n  const [isSaveSuccessful, setIsSaveSuccessful] = useState(false);\n\n  const addTodo = (content, status) => {\n    const newTodo = { id: Date.now(), content, status };\n    setTodos([...todos, newTodo]);\n  };\n\n  const removeTodo = (todoId) => {\n    setTodos(todos.filter((item) => item.id !== todoId));\n  };\n\n  const handleSaveNewTask = () => {\n    if (newTaskContent.trim() !== '') {\n      addTodo(newTaskContent, 'TODO');\n      setNewTaskContent('');\n      setIsSaveSuccessful(true);\n      setTimeout(() => {\n        setIsSaveSuccessful(false);\n      }, 3000);\n    } else {\n      message.error('Task content cannot be empty.');\n    }\n  };\n\n  const showDetails = (item) => {\n    Modal.info({\n      title: 'Task Details',\n      content: (\n        <div>\n          <p>Task Content: {item.content}</p>\n          <p>Status: {item.status}</p>\n        </div>\n      ),\n    });\n  };\n\n  const startTask = (task) => {\n    // Logic to update task state to 'DOING'\n    const updatedTodos = todos.map((t) =>\n      t.id === task.id ? { ...t, status: 'DOING' } : t\n    );\n    setTodos(updatedTodos);\n  };\n\n  const finishTask = (todoId) => {\n    // Change the status of the task to \"Completed\" and move it to the \"DONE\" list\n    const updatedTodos = todos.map((t) =>\n      t.id === todoId ? { ...t, status: 'DONE' } : t\n    );\n    setTodos(updatedTodos);\n  };\n\n  const contentStyle = {\n    height: '160px',\n    color: '#078095',\n    lineHeight: '160px',\n    textAlign: 'center',\n    background: '#c7e2ff', // Light blue background color\n  };\n\n  const renderTasksByStatus = (status) => {\n    return todos\n      .filter((task) => status === 'ALL TASKS' || task.status === status)\n      .map((task) => (\n        <div key={task.id} style={contentStyle}>\n          <TaskCard\n            className=\"task-card\"\n            task={task}\n            onshowDetails={showDetails}\n            onStart={startTask}\n            onFinish={finishTask}\n          />\n          {task.status === 'DONE' && (\n            <Button className=\"viewDetailsButton\" onClick={() => showDetails(task)}>\n              View Details\n            </Button>\n          )}\n        </div>\n      ));\n  };\n\n  return (\n    <div className=\"todoContainer\">\n      <Layout>\n        <Content>\n          <div className=\"header\" style={{ display: 'flex', justifyContent: 'space-between' }}>\n            {/* Carousel for rotating tasks */}\n            <Carousel autoplay>\n              {renderTasksByStatus('ALL TASKS')}\n            </Carousel>\n          </div>\n        </Content>\n      </Layout>\n\n      <div className=\"todoColumnsContainer\">\n        {/* \"ALL TASKS\" list */}\n        <div className=\"todoColumn\">\n          {renderTasksByStatus('ALL TASKS')}\n        </div>\n\n        {/* \"TODO\" list */}\n        <div className=\"todoColumn\">\n          <h2>TODO</h2>\n          {renderTasksByStatus('TODO')}\n        </div>\n\n        {/* \"DOING\" list */}\n        <div className=\"todoColumn\">\n          <h2>DOING</h2>\n          {renderTasksByStatus('DOING')}\n        </div>\n\n        {/* \"DONE\" list */}\n        <div className=\"todoColumn\">\n          <h2>DONE</h2>\n          {renderTasksByStatus('DONE')}\n        </div>\n      </div>\n\n      {/* New Task input */}\n      <div className=\"todoColumn\">\n        <Input\n          placeholder=\"New Task\"\n          value={newTaskContent}\n          onChange={(e) => setNewTaskContent(e.target.value)}\n        />\n        <Button className=\"todoButton\" onClick={handleSaveNewTask}>\n          Save\n        </Button>\n        {isSaveSuccessful && <div className=\"successMessage\">Save Successful</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default TodoList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}