{"ast":null,"code":"var _jsxFileName = \"E:\\\\csstudydir\\\\todo-list\\\\order\\\\tmp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, Button, Input, Modal, message } from 'antd';\nimport TaskDetailsCarousel from './TaskDetailsCarousel';\nimport TaskCard from './TaskCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [newTaskContent, setNewTaskContent] = useState('');\n  const [isSaveSuccessful, setIsSaveSuccessful] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const addNewTask = newTask => {\n    setTasks([...tasks, newTask]);\n  };\n  useEffect(() => {\n    const interval = setInterval(() => {\n      // Rotate tasks every two seconds\n      setCurrentIndex(prevIndex => (prevIndex + 1) % todos.length);\n    }, 2000);\n    return () => clearInterval(interval);\n  }, [todos]);\n  const addTodo = (content, status) => {\n    const newTodo = {\n      id: Date.now(),\n      content,\n      status\n    };\n    setTodos([...todos, newTodo]);\n  };\n  const removeTodo = todoId => {\n    setTodos(todos.filter(item => item.id !== todoId));\n  };\n  const changeStatus = (todoId, newStatus) => {\n    setTodos(todos.map(item => item.id === todoId ? {\n      ...item,\n      status: newStatus\n    } : item));\n  };\n  const handleSaveNewTask = () => {\n    if (newTaskContent.trim() !== '') {\n      addTodo(newTaskContent, 'TODO');\n      setNewTaskContent('');\n      setIsSaveSuccessful(true);\n      setTimeout(() => {\n        setIsSaveSuccessful(false);\n      }, 3000);\n    } else {\n      message.error('Task content cannot be empty.');\n    }\n  };\n  const showDetails = item => {\n    Modal.info({\n      title: 'Task Details',\n      content: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Task Content: \", item.content]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", item.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    });\n  };\n  const startTask = task => {\n    // Logic to update task state to 'DOING'\n    const updatedTasks = tasks.map(t => t.id === task.id ? {\n      ...t,\n      state: 'DOING'\n    } : t);\n    setTasks(updatedTasks);\n  };\n  const finishTask = todoId => {\n    // Change the status of the task to \"Completed\" and move it to the \"DONE\" list\n    changeStatus(todoId, 'DONE');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"All Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), TaskCard.map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n          task: task,\n          onshowDetails: showDetails,\n          onStart: startTask,\n          onFinish: finishTask\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoColumnsContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todoColumn\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"columnHeader\",\n          children: \"All Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), todos.map(item => /*#__PURE__*/_jsxDEV(Card, {\n          className: \"todoCard\",\n          children: [item.content, item.status === 'DONE' && /*#__PURE__*/_jsxDEV(Button, {\n            className: \"todoButton\",\n            onClick: () => showDetails(item),\n            children: \"View Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), item.status === 'DOING' && /*#__PURE__*/_jsxDEV(Button, {\n            className: \"todoButton\",\n            onClick: () => finishTask(item.id),\n            children: \"Click to Finish\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"todoButton\",\n            onClick: () => removeTodo(item.id),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todoColumn\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"New Task\",\n          value: newTaskContent,\n          onChange: e => setNewTaskContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"todoButton\",\n          onClick: handleSaveNewTask,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), isSaveSuccessful && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"successMessage\",\n          children: \"Save Successful\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"NVRSzGlHjshEVLPe3B+41xOvH30=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","useEffect","Card","Button","Input","Modal","message","TaskDetailsCarousel","TaskCard","jsxDEV","_jsxDEV","TodoList","_s","todos","setTodos","currentIndex","setCurrentIndex","newTaskContent","setNewTaskContent","isSaveSuccessful","setIsSaveSuccessful","tasks","setTasks","addNewTask","newTask","interval","setInterval","prevIndex","length","clearInterval","addTodo","content","status","newTodo","id","Date","now","removeTodo","todoId","filter","item","changeStatus","newStatus","map","handleSaveNewTask","trim","setTimeout","error","showDetails","info","title","children","fileName","_jsxFileName","lineNumber","columnNumber","startTask","task","updatedTasks","t","state","finishTask","className","style","display","justifyContent","onshowDetails","onStart","onFinish","onClick","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["E:/csstudydir/todo-list/order/tmp/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, Button, Input, Modal, message } from 'antd';\nimport TaskDetailsCarousel from './TaskDetailsCarousel';\nimport TaskCard from './TaskCard';\n\nconst TodoList = () => {\n  const [todos, setTodos] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [newTaskContent, setNewTaskContent] = useState('');\n  const [isSaveSuccessful, setIsSaveSuccessful] = useState(false);\n  const [tasks, setTasks] = useState([]);\n\n  const addNewTask = (newTask) => {\n    setTasks([...tasks, newTask]);\n  };\n  useEffect(() => {\n    const interval = setInterval(() => {\n      // Rotate tasks every two seconds\n      setCurrentIndex((prevIndex) => (prevIndex + 1) % todos.length);\n    }, 2000);\n\n    return () => clearInterval(interval);\n  }, [todos]);\n  \n  const addTodo = (content, status) => {\n    const newTodo = { id: Date.now(), content, status };\n    setTodos([...todos, newTodo]);\n  };\n\n  const removeTodo = (todoId) => {\n    setTodos(todos.filter((item) => item.id !== todoId));\n  };\n\n  const changeStatus = (todoId, newStatus) => {\n    setTodos(\n      todos.map((item) => (item.id === todoId ? { ...item, status: newStatus } : item))\n    );\n  };\n\n  const handleSaveNewTask = () => {\n    if (newTaskContent.trim() !== '') {\n      addTodo(newTaskContent, 'TODO');\n      setNewTaskContent('');\n      setIsSaveSuccessful(true);\n      setTimeout(() => {\n        setIsSaveSuccessful(false);\n      }, 3000);\n    } else {\n      message.error('Task content cannot be empty.');\n    }\n  };\n  const showDetails = (item) => {\n    Modal.info({\n      title: 'Task Details',\n      content: (\n        <div>\n          <p>Task Content: {item.content}</p>\n          <p>Status: {item.status}</p>\n        </div>\n      ),\n    });\n  };\n  const startTask = (task) => {\n    // Logic to update task state to 'DOING'\n    const updatedTasks = tasks.map((t) =>\n      t.id === task.id ? { ...t, state: 'DOING' } : t\n    );\n    setTasks(updatedTasks);\n  };\n\n  const finishTask = (todoId) => {\n    // Change the status of the task to \"Completed\" and move it to the \"DONE\" list\n    changeStatus(todoId, 'DONE');\n  };\n  return (\n    <div className=\"todoContainer\">\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        {/* All Tasks list */}\n        <div>\n          <div>All Tasks</div>\n          {TaskCard.map((task) => (\n            <TaskCard\n              key={task.id}\n              task={task}\n              onshowDetails={showDetails}\n              onStart={startTask}\n              onFinish={finishTask}\n            />\n          ))}\n        </div>\n      </div>\n      <div className=\"todoColumnsContainer\">\n        {/* All Tasks list */}\n        <div className=\"todoColumn\">\n          <div className=\"columnHeader\">All Tasks</div>\n          {todos.map((item) => (\n            <Card key={item.id} className=\"todoCard\">\n              {item.content}\n              {/* Display \"View Details\" for completed tasks */}\n              {item.status === 'DONE' && (\n                <Button className=\"todoButton\" onClick={() => showDetails(item)}>\n                  View Details\n                </Button>\n              )}\n              {/* Display \"Click to Finish\" for tasks in progress */}\n              {item.status === 'DOING' && (\n                <Button className=\"todoButton\" onClick={() => finishTask(item.id)}>\n                  Click to Finish\n                </Button>\n              )}\n              <Button className=\"todoButton\" onClick={() => removeTodo(item.id)}>\n                Remove\n              </Button>\n            </Card>\n          ))}\n        </div>\n\n        {/* New Task input */}\n        <div className=\"todoColumn\">\n          <Input\n            placeholder=\"New Task\"\n            value={newTaskContent}\n            onChange={(e) => setNewTaskContent(e.target.value)}\n          />\n          <Button className=\"todoButton\" onClick={handleSaveNewTask}>\n            Save\n          </Button>\n          {isSaveSuccessful && <div className=\"successMessage\">Save Successful</div>}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TodoList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}